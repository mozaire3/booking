# Generated by Django 4.1.13 on 2024-11-04 14:33

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentId', models.IntegerField()),
                ('categorieName', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CoursecontentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseId', models.IntegerField()),
                ('title', models.CharField(default=None, max_length=1000)),
                ('title_fon', models.CharField(default=None, max_length=1000)),
                ('video', models.FileField(blank=True, default=None, max_length=255, null=True, upload_to='static/public/video')),
                ('image', models.FileField(blank=True, default=None, null=True, upload_to='static/public/image')),
                ('audio', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('content', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('content_fon', models.CharField(blank=True, default=None, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('titre_fon', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('description_fon', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('imageCourse', models.FileField(blank=True, default=None, null=True, upload_to='static/public')),
                ('duration', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10000000000, null=True)),
                ('userId', models.IntegerField()),
                ('categories', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='EnrollementModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollementDate', models.DateField(auto_created=True)),
                ('userId', models.IntegerField()),
                ('courseId', models.IntegerField()),
                ('completionStatus', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PayementModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payementDate', models.DateField(auto_created=True)),
                ('userId', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payementMethod', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='QuizModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quizName', models.CharField(max_length=255)),
                ('courseId', models.IntegerField()),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ResultModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usersId', models.IntegerField()),
                ('courseId', models.IntegerField()),
                ('quizId', models.IntegerField()),
                ('score', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=40)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=40)),
                ('role', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
